
## Installation
#This documentation provides instructions for setting up PostgreSQL and MySQL databases using Docker.


#Follow these steps to install Docker Desktop on your system:
#1. [Download Docker Desktop](https://www.docker.com/products/docker-desktop)
#2. Install Docker Desktop by following the on-screen instructions.


## PostgreSQL Setup
#1. Pull the latest PostgreSQL image from Docker Hub:

#postgres docker image installation

docker pull postgres

#test running the postgres image

 docker run --name PSQLDB -e POSTGRES_PASSWORD=henshin -d -p 5432:5432 postgres

#Note: my password for postgres = henshin

#Install PostgreSQL Client (psql):
#You can download the PostgreSQL client from the official PostgreSQL website: PostgreSQL Downloads (For windows https://www.postgresql.org/download/windows/)
#Follow the installation instructions provided on the website.
#Make sure to include the PostgreSQL bin directory in your system's PATH environment variable during installation.


## MYSQL Setup
#1. Pull the latest MySQL image from Docker Hub:

#mysql docker image installation

docker pull mysql

#test running the MYSQL image

docker run --name mysqlDB -e MYSQL_ROOT_PASSWORD=henshin -d -p 3306:3306 mysql

#Note: my password for mysql = henshin

#Install MySQL Client (mysql):
#You can download MySQL Community Server from the official MySQL website: MySQL Community Downloads (https://dev.mysql.com/downloads/mysql/)
#Follow the installation instructions provided on the website.
#During installation, make sure to select "MySQL Command Line Client" or "MySQL Shell" as part of the installation components.

## Verify installation
#verify the running images 

docker ps

#Configure psql:
#Open a command prompt or PowerShell window.
#Use the following command to connect to the PostgreSQL database:

psql -h localhost -U postgres -p 5432

#You'll be prompted to enter the password you set when running the PostgreSQL container.

#Configure mysql:
#Open a command prompt or PowerShell window.
#Use the following command to connect to the MySQL database:

mysql -h localhost -u root -p -P 3306

#You'll be prompted to enter the password you set when running the MySQL container.

#Once configured, try executing some basic SQL commands to ensure connectivity. For example:
#For PostgreSQL, you can try \l to list databases.
#For MySQL, you can try SHOW DATABASES; to list databases.
#If you can successfully connect and execute commands, it confirms that your Dockerized databases are accessible from your local machine.


## Python Environment Setup

### 1. Install Anaconda:

#Download and install Anaconda from the [official website](https://www.anaconda.com/products/distribution).

### 2. Create Python 3 Environment:

#Open Anaconda Navigator or Anaconda Prompt, and create a new Python 3 environment with the following command:
conda create --name myenv python=3

### 3. Activate the Environment:

#Activate the newly created environment using the following command:

conda activate myenv

### 4. Install Connector Drivers for MySQL and PostgreSQL:
#For PostgreSQL

conda install -c anaconda psycopg2

#For MYSQL

conda install -c anaconda mysql-connector-python

